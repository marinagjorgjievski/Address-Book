{"version":3,"sources":["PersonForm/PersonForm.js","PersonItem/PersonItem.js","Person/PersonLlist/PersonLlist.js","App.js","reportWebVitals.js","index.js"],"names":["getData","require","PersonForm","onChangeHandler","updatePersonItem","submitPersonFormHandler","errors","className","noValidate","autoComplete","htmlFor","name","id","type","defaultValue","firstName","onChange","style","color","lastName","email","country","map","value","code","onClick","PersonItem","personData","updatePersonItemHandler","deletePersonItemHandler","PersonLlist","useState","setPersonData","showForm","setShowForm","updatePersonState","setUpdatePersonState","setErrors","event","target","updatePersonId","isValid","newErrors","RegExp","test","handleValidation","person","length","personItem","showUpdateForm","personDataCopy","indexToDelete","findIndex","item","splice","deletePersonItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.484dd4c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PersonForm.scss'\r\n\r\nconst { getData } = require('country-list');\r\n\r\nconst PersonForm = ({onChangeHandler, updatePersonItem, submitPersonFormHandler, errors}) => {\r\n\r\n  return (\r\n    <div className=\"add-form-card\">\r\n      <form noValidate autoComplete=\"off\">\r\n        <h4>Add New Person</h4>\r\n        <hr></hr>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              type=\"text\"\r\n              defaultValue={updatePersonItem ? updatePersonItem.firstName : null}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <span style={{color: \"red\"}}>{errors.firstName}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              type=\"text\"\r\n              defaultValue={updatePersonItem ? updatePersonItem.lastName : null}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <span style={{color: \"red\"}}>{errors.lastName}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              name=\"email\"\r\n              id=\"email\"\r\n              type=\"text\"\r\n              defaultValue={updatePersonItem ? updatePersonItem.email : null}\r\n              onChange={onChangeHandler}\r\n            />\r\n            <span style={{color: \"red\"}}>{errors.email}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label htmlFor=\"country\">Country:</label>\r\n          <div className=\"input-group\">\r\n            <select\r\n              id=\"country\"\r\n              name=\"country\"\r\n              onChange={onChangeHandler}\r\n              defaultValue={updatePersonItem ? updatePersonItem.country : null}\r\n              >\r\n              <option></option>\r\n              {getData().map(country => \r\n                <option\r\n                  key={country.code}\r\n                  value={country.name}\r\n                  >\r\n                  {country.name}\r\n                </option>\r\n              )}\r\n            </select>\r\n            <span style={{color: \"red\"}}>{errors.country}</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"button\" onClick={() => submitPersonFormHandler(updatePersonItem ? updatePersonItem.id : null)} >Submit </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\nimport './PersonItem.css'\r\n\r\nconst PersonItem = ({ personData, updatePersonItemHandler, deletePersonItemHandler }) => {\r\n  return (\r\n    <div className=\"personal-item\">\r\n      <div className=\"card\">\r\n        <div className=\"action-btns\">\r\n          <button className=\"edit-btn\" onClick={updatePersonItemHandler}>Edit</button>\r\n          <button className=\"delete-btn\" onClick={deletePersonItemHandler}>Delete</button>\r\n        </div>\r\n        <h4><b>{personData.firstName} {personData.lastName}</b></h4> \r\n        <p><b>Email:</b> {personData.email}</p> \r\n        <p><b>Country:</b> {personData.country}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonItem;","import React, { useState } from 'react';\r\nimport PersonForm from '../../PersonForm/PersonForm';\r\nimport PersonItem from '../../PersonItem/PersonItem';\r\nimport './PersonLlist.css'\r\n\r\nconst PersonLlist = () => {\r\n\r\n  const [ personData, setPersonData] = useState([\r\n    {id: \"0\", firstName: \"Jason\", lastName: \"Muller\", email:\"jason@example.com\", country: \"Brazil\"},\r\n    {id: \"1\", firstName: \"Matt\", lastName: \"Pears\", email:\"matt@example.com\", country: \"Japan\"},\r\n    {id: \"2\", firstName: \"Charlie\", lastName: \"Stone\", email:\"charlie@example.com\", country: \"Thailand\"}\r\n  ]);\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [updatePersonState, setUpdatePersonState] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  const showAddForm = () => {\r\n    setShowForm(!showForm);\r\n    setErrors({});\r\n    setUpdatePersonState({});\r\n  }\r\n\r\n  const showUpdateForm = (personItem) => {\r\n    setShowForm(!showForm);\r\n    setErrors({});\r\n    setUpdatePersonState(personItem);\r\n  }\r\n  \r\n  const onChange = (event) => {\r\n    setUpdatePersonState({\r\n      ...updatePersonState,\r\n      [event.target.name]: event.target.value,        \r\n    });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n    if (!updatePersonState.firstName) {\r\n      isValid = false;\r\n      newErrors.firstName = 'First name is required';\r\n    }\r\n\r\n    if (!updatePersonState.lastName) {\r\n      isValid = false;\r\n      newErrors.lastName = 'Last name is required';\r\n    }\r\n\r\n    if (!updatePersonState.email) {\r\n      isValid = false;\r\n      newErrors.email = 'Email is required';\r\n    }\r\n\r\n    if (!updatePersonState.email !== \"undefined\") {\r\n          \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(updatePersonState.email)) {\r\n        isValid = false;\r\n        newErrors.email = 'Please enter valid email address.';\r\n      }\r\n    }\r\n    \r\n    if (!updatePersonState.country) {\r\n      isValid = false;\r\n      newErrors.country = 'Country is required';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n\r\n    return isValid;\r\n  }\r\n\r\n  const submitPersonForm = updatePersonId => {\r\n    if (!handleValidation()) {\r\n      return;\r\n    }\r\n\r\n    if (updatePersonId) {\r\n      setPersonData(\r\n        personData.map(person => (person.id === updatePersonId)\r\n          ? {\r\n            id: updatePersonId,\r\n            firstName: updatePersonState.firstName ? updatePersonState.firstName : person.firstName,\r\n            lastName: updatePersonState.lastName ? updatePersonState.lastName : person.lastName,\r\n            email: updatePersonState.email ? updatePersonState.email : person.email,\r\n            country: updatePersonState.country ? updatePersonState.country : person.country,\r\n          }\r\n          : person\r\n        )\r\n      );\r\n    } else {\r\n      setPersonData([\r\n        ...personData,\r\n        {\r\n          id: personData.length + 1,\r\n          firstName: updatePersonState.firstName,\r\n          lastName: updatePersonState.lastName,\r\n          email: updatePersonState.email,\r\n          country: updatePersonState.country\r\n        },\r\n      ]);\r\n    }\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  const deletePersonItem = (id) => {\r\n    const personDataCopy = personData;\r\n\r\n    const indexToDelete = personDataCopy.findIndex((item)=> item.id === id);\r\n    personDataCopy.splice(indexToDelete, 1);\r\n\r\n    setPersonData([...personDataCopy]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"add-btn\">\r\n        <button type=\"button\" onClick={showAddForm}>{showForm ? 'X' : 'Add New Person'}</button>\r\n      </div>\r\n      <div className=\"card-list\">\r\n        {showForm\r\n          ? (\r\n            <PersonForm\r\n              onChangeHandler={onChange}\r\n              updatePersonItem={updatePersonState}\r\n              submitPersonFormHandler={submitPersonForm}\r\n              errors={errors}\r\n            />\r\n          )\r\n          : (\r\n            personData.map(personItem => (\r\n              <PersonItem\r\n                key={personItem.id}\r\n                personData={personItem}\r\n                updatePersonItemHandler = {() => showUpdateForm(personItem)}\r\n                deletePersonItemHandler = {()=> deletePersonItem(personItem.id)}\r\n              />\r\n              ))\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonLlist;","import React from 'react';\nimport './App.css';\nimport PersonLlist from './Person/PersonLlist/PersonLlist';\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"header\">Address Book</h1>\n      <PersonLlist/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}